name: Test JMeter Action

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, edited, reopened]

jobs:
  action_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run JMeter Action on a test
        uses: rbhadti94/apache-jmeter-action@v0.6.0
        with:
          testFilePath: jmeter/plan.jmx
          outputReportsFolder: reports/
          args: "--loglevel INFO"
      # ここはS3になる
      - uses: actions/upload-artifact@v3
        with:
          name: result
          path: reports/
      # - name: 'ls'
      #  run: ls -lhaR ${{steps.download.outputs.download-path}}
      - name: Comment JMeter Action results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: JMeter Action Results
          message: |
            JMeterを実行しました
      # - name: change owner of vender directory(some files owner is root)
      #  run: sudo chown -R runner:docker ./reports
      - name: 'cat json'
        run: cat ./reports/statistics.json
      - name: 'script'
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const path = require('path');
            const content = fs.readFileSync(path.resolve('./reports/statistics.json'), 'utf8');
            const json = JSON.parse(content);
            const params = {
              minResTime: json['HTTP Request']['minResTime'],
              maxResTime: json['HTTP Request']['maxResTime'],
              sampleCount: json['HTTP Request']['sampleCount'],
              errorCount: json['HTTP Request']['errorCount'],
              meanResTime: json['HTTP Request']['meanResTime'],
            };
            const body = `
              sampleCount: ${params.sampleCount}
              errorCount: ${params.errorCount}
              minResTime: ${params.minResTime}ms
              maxResTime: ${params.maxResTime}ms
              meanResTime: ${params.meanResTime}ms `;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
      - name: Write to Google Sheet
        run: |
          echo params \
          curl -X POST \
            -H "Content-Type: application/json" \
            -d params \
            https://script.google.com/macros/s/AKfycbz71KOSwVy3l0SzrFRw4-QNqV0WLhSWsJJ8TGqh-MAI1yQwTwOCFlwtWXSxaYumjUQ0MA/exec
